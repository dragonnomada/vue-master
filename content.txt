VueJS + NodeJS Development

32 hrs

Fecha de Inicio: 29 de noviembre de 2021
Fecha de Termino: 8 de diciembre de 2021
Horario: De 9:00 a 13:00 hrs.

Formato: Línea

Temario:

Parte 1. Presentando Vue y Node
Evolución del stack de tecnología JavaScript | Instalación de Node.js | Presentando
NVM | Presentando npm | Comprendiendo el CLI Node | Comprensión de los módulos de
Node | Yarn, una alternativa a npm

Parte 2. Construyendo una Aplicación Express
Introducción a Node.js | Presentamos Express.js | Introducción a MVC | Crear archivos de
vista para la aplicación Express.js

Parte 3. Trabajando con SQL
¿Por qué SQL? | Consultas de SQL | Agregar validación | CRUD, ejemplo cómo
implementar con Vue

Parte 4. Presentamos API REST
¿Qué es REST? | Presentamos las API REST | Verbos HTTP | Códigos de estado
HTTP | Presentando postman

Parte 5. Construyendo la aplicación real
Presentamos Vue.js | Instalación de Vue.js | Presentamos vue-cli | Construyendo una
aplicación estática con Vue.js | Directivas de vue.js | El enlace de datos | Manejo de
formularios con Vue.js | Comunicarse con los servidores | Cargando contenido dinámico
en la página de inicio | Notification components | vue-notifications | vue-easy-toast

Parte 9. Presentando Vuex
Aplicación tradicional de varias páginas web | Introducción a los SPA | SPA versus
MPA | Una introducción a Vuex | Conceptos centrales de Vuex | Creando una aplicación
Vuex simple | Instalación y uso de Vuex en una aplicación de películas

Parte 6. Ofuscación de código JS
Qué es ofuscación de código | Por qué ofuscar código JS | Técnicas de ofuscación de
código | Métricas de ofuscación | Ofuscación & SDLC | Compatibilidad de código
ofuscado JS | Protección de JavaScript: comprobaciones / bloqueos del entorno 

Parte 7. Optimización con Webpack
Single file components | Optimizar el build de Vue | runtime-only build | Eliminar
advertencias y mensajes de error en producción | Browser cache management | vendor
file | fingerprinting | auto inject build files | Code splitting | Componentes async | require
| lazy loading

Parte 8. Autenticación de certificado de cliente (mTLS) con Node
Autenticación mediante certificados de cliente HTTPS | Certificados autorizados HTTPS
con Node.js | Cómo usar | Testing de un cliente válido | Testing de un cliente inválido
| Certificados de servidor | Crear certificados de cliente | Server-signed y validación |
self-signed e invalidación

Parte 10. Prueba de una aplicación
Beneficios de las pruebas | Introducción a las pruebas unitarias | Una introducción a la
prueba de un extremo a otro | | Presentando Mocha | Presentando chai | Presentando
sinon | Escribir pruebas para el servidor Node.js | Escritura de pruebas para componentes
de Vue.js